#!/bin/bash
main() {
	socat TCP4-LISTEN:1336,fork,reuseaddr EXEC:"bash /usr/local/bin/pollenproxy web" 2>1 > /dev/null &
	echo $! > /var/run/pollenproxy.pid

}



web() {

#Headersnstuff
read request
request=`echo $request | cut -d" " -f2`
echo -e "HTTP/1.1 200 OK\nAccess-Control-Allow-Origin: *\n"
# Everything
case  "$request"  in
		"/graeser")
		graeser
		;;
		"/roggen")
		roggen
		;;
		"/banking")
		banking
		;;
		"/calendar")
		calendar
		;;
        "/weatheralerts")
        weatheralerts
        ;;
        "/uvindex")
        uvindex
        ;;

esac
}
graeser() {
datum=`date +"%Y-%m-%d"`
graeserweb=`curl --connect-timeout 10 -s -d  "datum=$datum&plz=31785&ort=Hameln&land=31785" "http://www.allergie.hexal.de/pollenflug/vorhersage/load_pollendaten.php"| lynx -dump -stdin | egrep "ser" | cut -d"_" -f3 | cut -d"." -f1`
case "$graeserweb" in
        0) echo -n "0"
            ;;
        1) echo -n "0.6"
            ;;
        2) echo -n "0.8"
            ;;
        3) echo -n "1"
            ;;
        *) echo -n "0"
            ;;
esac
}
roggen() {
datum=`date +"%Y-%m-%d"`
roggenweb=`curl --connect-timeout 10 -s -d "datum=$datum&plz=31785&ort=Hameln&land=31785" "http://www.allergie.hexal.de/pollenflug/vorhersage/load_pollendaten.php" | lynx -dump  -stdin | egrep "Roggen" | cut -d"_" -f3 | cut -d"." -f1`
case "$roggenweb" in
        0) echo -n "0"
            ;;
        1) echo -n "0.6"
            ;;
        2) echo -n "0.8"
            ;;
        3) echo -n "1"
            ;;
        *) echo -n "0"
            ;;
esac
}
banking() {

banking=`aqbanking-cli -D /path/to/.aqbanking/ -P /path/to/pinfile request --balance -a kontonummer 2>/dev/null | grep "value=" | tail -n2 | head -n1 | cut -d'"' -f2 | cut -d"%" -f1`

vor=${banking%??}
nach=${banking: -2}

result=$vor
result+="."
result+=$nach

echo $result
}
calendar() {

#GCAL Only
datum=`date +"%Y-%m-%d"`
wget -qO - "https://www.google.com/calendar/feeds/yourgmailadress%40gmail.com/private-aspecialhash/full?orderby=starttime&sortorder=descending&futureevents=true&alt=json&start-min=${datum}"
}
read_dom () {
    local IFS=\>
    read -d \< ENTITY CONTENT
    local ret=$?
    TAG_NAME=${ENTITY%% *}
    ATTRIBUTES=${ENTITY#* }
    return $ret
}
weatheralerts() {
#http://kunden.dwd.de/gdsRegistration/gdsRegistrationStart.do <-- for an ftp account.
#HMXX is the ID of "Hameln-Pyrmont"
#ftp://ftp-outgoing2.dwd.de/gds/specials/warnings/legend_warnings.pdf 
#ID for City/Region Page 9ff.
#https://werdis.dwd.de/infos/legend_warnings_CAP.pdf documentation for the values
warnurls=`wget -qO - ftp://user:password@ftp-outgoing2.dwd.de/gds/specials/warnings/xml/HA/ | grep "HMXX" | grep -o '<a .*href=.*>' | sed -e 's/<a /\n<a /g' | sed -e 's/<a .*href=['"'"'"]//' -e 's/["'"'"'].*$//' -e '/^$/ d'`
#warnurls=`echo "$warnurls" | sed -n '1!G;h;$p' `
first="1"
jsonresult='{"events":['
while read -r line; do
	weatherxml=`wget -qO - $line`

	valuecount="0"
	if [ $first != "1" ]; then
		jsonresult+=',{'
	else
		jsonresult+='{'
		first="0"
	fi	
	while read_dom; do

		case $ENTITY in
		"msgType")
		type="$CONTENT"
		;;
		"urgency")
		urgency="$CONTENT"
		;;
		"severity")
		severity="$CONTENT"
		;;
		"value")
		if [ $valuecount == "0" ]; then
			id="$CONTENT"
			valuecount="1"
		fi
		;;
		"effective")
		effective="$CONTENT"
		;;
		"onset")
		onset="$CONTENT"
		;;
		"expires")
		expires="$CONTENT"
		;;
		esac
	done <<< "$weatherxml"
	jsonresult+="\"type\":\"${type}\",\"severity\":\"${severity}\",\"urgency\":\"${urgency}\",\"id\":\"${id}\",\"effective\":\"${effective}\",\"onset\":\"${onset}\",\"expires\":\"${expires}\""
	jsonresult+='}'
done <<< "$warnurls"
jsonresult+="]}"
echo -e "$jsonresult"
}

uvindex() {
#this is terrible
result=`wget -qO - http://www.weatheronline.de/Niedersachsen/Hameln/UVIndex.htm | grep '<td height="38">' | head -n1 | cut -d">" -f3 | cut -d"<" -f1 | tr -d ' '`
echo -n "$result"
}





case  "$1"  in
		"web")
		web
		;;
		*)       
		main
		;;
esac
